name: Security SAST and DAST

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.6

      - name: Install dependencies
        run: |
          pip install -r requirements.txt && pip install pytest-json

      - name: Run tests
        run: |
          pytest --maxfail=5 --disable-warnings --exitfirst -v --junitxml=pytest_report.xml --json=pytest_report.json || true

      - name: Install Bandit
        run: |
          pip install bandit

      - name: Run Bandit scan
        run: |
          bandit -r . -v -o bandit-report.json || true

      # Log in to Docker Hub (if authentication is needed)
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Install dependencies
      # Run OWASP ZAP scan using Docker
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run --rm -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://164.92.84.183:5000/ -r report_html

# Upload Bandit Report as Artifact
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: bandit-report.json
          path: bandit-report.json

      - name: Pytest
        uses: actions/upload-artifact@v4.6.2
        with:
          name: pytest_report.json
          path: pytest_report.json

      - name: Owasp
        uses: actions/upload-artifact@v4.6.2
        with:
          name: zap_report.html
          path: zap_report.html
